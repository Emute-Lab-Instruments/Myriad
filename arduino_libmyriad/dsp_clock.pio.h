// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

// #if !PICO_NO_HARDWARE
// #include "hardware/pio.h"
// #endif

// --------- //
// dsp_clock //
// --------- //

#define dsp_clock_wrap_target 2
#define dsp_clock_wrap 4
#define dsp_clock_pio_version 0

static const uint16_t dsp_clock_program_instructions[] = {
    0x80a0, //  0: pull   block                      
    0x6040, //  1: out    y, 32                      
            //     .wrap_target
    0xa022, //  2: mov    x, y                       
    0xc000, //  3: irq    nowait 0                   
    0x0044, //  4: jmp    x--, 4                     
            //     .wrap
};

// #if !PICO_NO_HARDWARE
static const struct pio_program dsp_clock_program = {
    .instructions = dsp_clock_program_instructions,
    .length = 5,
    .origin = -1,
    // .pio_version = 0,
// #if PICO_PIO_VERSION > 0
    // .used_gpio_ranges = 0x0
// #endif
};

static inline pio_sm_config dsp_clock_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dsp_clock_wrap_target, offset + dsp_clock_wrap);
    return c;
}

void dsp_clock_program_init(PIO pio, uint sm, uint offset) {
   pio_sm_config c = dsp_clock_program_get_default_config(offset);
   pio_sm_init(pio, sm, offset, &c);
}

// #endif

// --------------- //
// dsp_clock_irq_1 //
// --------------- //

// #define dsp_clock_irq_1_wrap_target 2
// #define dsp_clock_irq_1_wrap 4
// #define dsp_clock_irq_1_pio_version 0

// static const uint16_t dsp_clock_irq_1_program_instructions[] = {
//     0x80a0, //  0: pull   block                      
//     0x6040, //  1: out    y, 32                      
//             //     .wrap_target
//     0xa022, //  2: mov    x, y                       
//     0xc001, //  3: irq    nowait 1                   
//     0x0044, //  4: jmp    x--, 4                     
//             //     .wrap
// };

// #if !PICO_NO_HARDWARE
// static const struct pio_program dsp_clock_irq_1_program = {
//     .instructions = dsp_clock_irq_1_program_instructions,
//     .length = 5,
//     .origin = -1,
//     .pio_version = 0,
// #if PICO_PIO_VERSION > 0
//     .used_gpio_ranges = 0x0
// #endif
// };

// static inline pio_sm_config dsp_clock_irq_1_program_get_default_config(uint offset) {
//     pio_sm_config c = pio_get_default_sm_config();
//     sm_config_set_wrap(&c, offset + dsp_clock_irq_1_wrap_target, offset + dsp_clock_irq_1_wrap);
//     return c;
// }

// void dsp_clock_irq_1_program_init(PIO pio, uint sm, uint offset) {
//    pio_sm_config c = dsp_clock_irq_1_program_get_default_config(offset);
//    pio_sm_init(pio, sm, offset, &c);
// }

// #endif

